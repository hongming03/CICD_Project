name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  ACTIONS_STEP_DEBUG: true

    
jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: List workspace files
        run: |
          ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Format Check
        run: |
          flake8 .
          black --check .
        continue-on-error: true

      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover tests
          coverage report -m

    
  docker-build:
    runs-on: ubuntu-latest
    needs: unit-test

    env:
      ACTIONS_STEP_DEBUG: true
      DB_HOST: ${{ vars.DB_HOST }}
      DB_NAME: ${{ vars.DB_NAME }}
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}


# Creating .env file for docker-compose because .env file is in .gitignore and won't be pushed to repo
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: List workspace files
        run: |
          ls -la

      - name: Generate .env from job env
        run: |
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          
      - name: Start services with Docker Compose
      # Run docker compose in detached mode. Else, the job will be stuck here
        run: |
          docker compose up --build -d